"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.validateInput=void 0;
const validateInput=function(arrays){
if(!Array.isArray(arrays)){
throw new TypeError("Argument must be an array of arrays");
}

arrays.forEach(validateArray);
validateDimensions(arrays);
validateCombinations(arrays);
};exports.validateInput=validateInput;

const validateArray=function(array){
if(!Array.isArray(array)){
throw new TypeError(`Argument must be an array: ${array}`);
}
};




const validateDimensions=function({length}){
if(length>=MAX_DIMENSIONS){
throw new TypeError(
`Too many arrays (${length}): please use the 'big-cartesian' library instead of 'fast-cartesian'`);

}
};

const MAX_DIMENSIONS=100;


const validateCombinations=function(arrays){
const size=arrays.reduce(multiplySize,1);

if(size>=MAX_SIZE){
const sizeStr=Number.isFinite(size)?` (${size.toExponential(0)})`:"";
throw new TypeError(
`Too many combinations${sizeStr}: please use the 'big-cartesian' library instead of 'fast-cartesian'`);

}
};

const multiplySize=function(size,array){
return size*array.length;
};


const MAX_SIZE=2**32;
//# sourceMappingURL=validate.js.map